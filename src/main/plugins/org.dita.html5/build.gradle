/*
 * This file is part of the DITA Open Toolkit project.
 *
 * Copyright 2016 Jarno Elovirta
 *
 * See the accompanying LICENSE file for applicable license.
 */
buildscript {
    dependencies {
        classpath 'io.bit3:jsass:5.5.3'
    }

    repositories {
        mavenCentral()
        jcenter()
    }
}

apply plugin: 'java'

File cssDir = file('css')
File sassDir = file('sass')

import io.bit3.jsass.CompilationException
import io.bit3.jsass.Compiler
import io.bit3.jsass.Options
import io.bit3.jsass.OutputStyle

import java.nio.charset.Charset
import java.nio.file.Files

def sass(FileCollection files, File outputDir) {
    if (!outputDir.exists() && !outputDir.mkdir()) {
        throw new IOException("Failed to create ${outputDir}")
    }

    files.each {
        def compiler = new Compiler()
        def options = new Options()
        options.setOutputStyle(OutputStyle.EXPANDED)

        def basename = it.getName().substring(0, it.getName().lastIndexOf('.'))
        def outputFile = new File(outputDir, basename + '.css')

        try {
            logger.info("Compiling ${it}")
            def output = compiler.compileFile(it.toURI(), outputFile.toURI(), options)
            Files.write(outputFile.toPath(), output.getCss().getBytes(Charset.forName("UTF-8")))
        } catch (CompilationException e) {
            logger.error(e.getMessage())
        } catch (IOException e) {
            logger.error("Compilation failed: ${e.getMessage()}")
        }
    }
}

task compileSass {
    inputs.dir sassDir
    outputs.dir cssDir

    doLast {
        sass(
                fileTree(dir: 'sass', includes: ['commonltr.scss', 'commonrtl.scss']),
                cssDir
        )
    }
}
